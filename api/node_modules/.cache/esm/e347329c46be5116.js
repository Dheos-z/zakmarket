let JsonDB,Config;_46b‍.w("node-json-db",[["JsonDB",["JsonDB"],function(v){JsonDB=v}]]);_46b‍.w("node-json-db/dist/lib/JsonDBConfig",[["Config",["Config"],function(v){Config=v}]]);const http = require('http');
const app = require('./app');





// Database configuration

const defaultProducts = [
    { name: 'Macbook Pro 13"', price: 1.99, type: 'computer' },
    { name: 'Test nom', price: 22, type: 'test type' },
    { name: 'Autre test"', price: 332, type: 'feu' },
    { name: 'pokémon puissant', price: 9999999, type: 'dragon/eau/feu' }
];


var db = new JsonDB(new Config("products", true, false, '/'));
_46b‍.g.console.log(db.getData('/products[]'));

// defaultProducts.forEach(product => {
//     db.push('/products[]', product);
// });






// Server configuration

const normalizePort = val => {
    const port = parseInt(val, 10);

    if (isNaN(port)) {
        return val;
    }
    if (port >= 0) {
        return port;
    }
    return false;
};

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

const errorHandler = error => {
    if (error.syscall !== 'listen') {
        throw error;
    }
    const address = server.address();
    const bind = typeof address === 'string' ? 'pipe ' + address : 'port: ' + port;
    switch (error.code) {
        case 'EACCES':
            _46b‍.g.console.error(bind + ' requires elevated privileges.');
            process.exit(1);
            break;
        case 'EADDRINUSE':
            _46b‍.g.console.error(bind + ' is already in use.');
            process.exit(1);
            break;
        default:
            throw error;
    }
};

const server = http.createServer(app);

server.on('error', errorHandler);
server.on('listening', () => {
    const address = server.address();
    const bind = typeof address === 'string' ? 'pipe ' + address : 'port ' + port;
    _46b‍.g.console.log('Listening on ' + bind);
});

server.listen(port);
